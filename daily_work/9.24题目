打印杨辉三角


//C Zhang Tianning
#include <stdio.h>
int main()
{
int i,j,n = 0;
int a[100][100] = {0};
    while(n < 1 || n >100)
    {
        printf("请输入要打印的杨辉三角行数>:");
        scanf("%d",&n);
    }
    for(i = 0; i < n ; i++)
    {
        a[i][0] = 1;
    }
    for(i = 1; i < n; i++ ) 
    {
        for(j = 1; j <= i; j++) 
        {
            a[i][j] = a[i-1][j-1]+a[i-1][j];
        }
    }
    for(i = 0; i < n; i++) 
    {
        for(j = 0; j <= i; j++)
            printf("%5d",a[i][j]);
        printf("\n");
    }
return 0;
}

# Python3 Wen Mingyuan 不会打印等腰的三角形 -_-||
import math

n = int(input('请输入一个正整数：'))
one_space = ' '

# 迭代每行
for i in range(1, n + 1):
    first_num = 1
    first_space = ''
    line = ''
    # 得到每行第一个数字及其左侧空白的字符串
    for k in range(1, n - i + 1):    
        first_space = first_space + one_space
    line = line + first_space + str((first_num))
    # 得到每行其余数字及其左侧空白的字符串
    for j in range(2, i + 1):
        num = math.factorial(i - 1) / (math.factorial(j - 1) * math.factorial(i - j))
        line = line + '  ' + str(int(num))
    # 打印最终的每行
    print(line)

python3 CHEN Ruoyu
def main():
    num = int(input('Number of rows: '))
    yh = [[]] * num
    for row in range(len(yh)):
        yh[row] = [None] * (row + 1)
        for col in range(len(yh[row])):
            if col == 0 or col == row:
                yh[row][col] = 1
            else:
                yh[row][col] = yh[row - 1][col] + yh[row - 1][col - 1]
            print(yh[row][col], end='\t')
        print()


if __name__ == '__main__':
    main()
